#!/bin/bash    
prev=""

for str  # prints OK even with change
do
	if [ ! -f ${1} ];then #-e and -f. The first one will check whether a file exists regardless of the type, while the second one will return true only if the FILE is a regular file
		echo -e "\n\n${1} file does not exist\nForced Exit!!\n" #-e in echo means that 
		exit 1	 #If the file does not exist then the program will terminate
	fi
var=$1

line_no=$(awk '{x++} END {print x}' $1)
#echo lineno=$line_no #For computation we need the length of the vectors

cat $1 | while read line || [ -n "$line" ]; do echo $line; done > 55.txt 


sum_xy=0
sum_x=0
sum_y=0		#Variables
sum_x2=0
temp1=0
temp2=0
temp1_2=0
flag=0
count=0
firstword=0

a=0
b=0
err=0
while read LINE   #Read File
do
	if [ "${LINE}" != "$prev" ]		#Trim so we can edit the needed information
	then
		my_array=($(echo ${LINE} | tr ":" "\n" ))

		if [ "$count" -eq 0 ]	#First iteration we save the first element of the vector X
		then					
			firstword=${my_array[0]}
		fi

		if [ "$count" -ne 0 ]
		then				#Check if vector X is a constant vector. We save the first element. If it is different from any element in vector then 
			if  (( $(echo "$firstword != ${my_array[0]}" | bc ) ))		#it is not constant
			then
				flag=1 #means no constant vectors  #flag=1
			fi
		fi
		#echo count="${count}"

		let "count=count+1"	

	
		sum_x=$(echo "scale=2; ${sum_x} + ${my_array[0]}" | bc)
		sum_y=$(echo "scale=2; ${sum_y} + ${my_array[1]}" | bc)
		sum_xy=$(echo "scale=2; ${sum_xy} + ((${my_array[0]} * ${my_array[1]}))" | bc)
		sum_x2=$(echo "scale=2; ${sum_x2} + ((${my_array[0]} * ${my_array[0]}))" | bc)


	fi
	
done < 55.txt
# echo sum_x=$sum_x
# echo sum_y=$sum_y
# echo sum_xy=$sum_xy
# echo sum_x2=$sum_x2
# echo flag=$flag

if [ "$flag" -eq 0 ]
then
	#echo Constant vector
	a=-1		#Different computations for constant vector
	b=$(echo "scale=2; ${my_array[0]}" | bc | sed 's!\.0*$!!' )

	while read LINE
	do
		if [ "${LINE}" != "$prev" ]
		then
			my_array=($(echo ${LINE} | tr ":" "\n" ))
			temp1=$(echo "scale=2;  ((${a}  * ${my_array[0]})) + ${b}" | bc)
			temp1_2=$(echo "scale=2;  ${temp1} * ${temp1}" | bc)
			temp2=$(echo "scale=2;  ${my_array[1]} - ${temp1_2}" | bc)
			err=$(echo "scale=2; ${temp2} - (${my_array[1]} - ((((${a} * ${my_array[0]})) + ${b})))" | bc)
			#echo ${my_array[0]}
			#echo ${my_array[1]}
		fi
		
	done < 55.txt

	echo FILE:$1,a=${a} b=${b} c=0 err=${err}

else


	#echo temp1=$temp1
	#echo temp2=$temp2
	#echo a=$a
	#echo b=$b
	#echo No Constant vector
	temp1=$(echo "scale=2; ((${line_no} * ${sum_xy}))  - ((${sum_x} * ${sum_y}))" | bc)
	temp2=$(echo "scale=2; ((${line_no} * ${sum_x2}))  - ((${sum_x} * ${sum_x}))" | bc)
	a=$(echo "scale=2; (${temp1} / ${temp2})/1" | bc | sed 's!\.0*$!!')

	temp1=$(echo "scale=2; ${sum_y}  - ((${a} * ${sum_x}))" | bc)
	b=$(echo "scale=2; (${temp1} / ${line_no})/1" | bc | sed 's!\.0*$!!') 

	while read LINE
	do
		if [ "${LINE}" != "$prev" ]
		then
			my_array=($(echo ${LINE} | tr ":" "\n" ))
			temp1=$(echo "scale=2;  ((${a}  * ${my_array[0]})) + ${b}" | bc)
			temp1_2=$(echo "scale=2;  ${my_array[1]} - ${temp1}" | bc)
			temp2=$(echo "scale=2;  ${temp1_2} * ${temp1_2}" | bc)
			err=$(echo "scale=2; ${err} + ${temp2}" | bc)
		fi
	done < 55.txt
	echo FILE:$1,a=${a} b=${b} c=1 err=${err}
fi

shift #Shift args variable so every file be executed from the program
rm 55.txt
done 