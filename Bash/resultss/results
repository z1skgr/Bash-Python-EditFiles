#!/bin/bash    
prev=""


if test -e ${1} ; then #-e and . The first one will check whether a file exists regardless of the type
	echo 
else 
	echo -e "${1} does not exist\nForced Exit!!\n" #If the file does not exist then the program will terminate
	exit 1
fi

cat $1 | while read line || [ -n "$line" ]; do echo $line; done > 55.txt #Read file and preserve whitespaces for team's name

#Operation for the champ
while read LINE
do
	if [ "${LINE}" != "$prev" ] #Read file line by line
	then
		my_array=($(echo ${LINE} | tr ":" "\n" | tr "-" "\n" | tr " " "_" )) #Separate teams' names and scores 
											#-s search and replace string								
																			#Trim so the file can be handled easily for editing. Whitespace separates everything
		#echo ${my_array[0]}	#my_array is an array that has 4 cells. 2 for teams' names and 2 for scores
		#echo ${my_array[1]}
		#echo ${my_array[2]}
		#echo ${my_array[3]}

		#my_array[2] is the number of goals for the home team
		#my_array[3] is the number of goals for the away team
		if [ "${my_array[0]}" != "${my_array[1]}" ] #One team cant face itself
		then
			if [ "${my_array[2]}" -gt "${my_array[3]}"  ] #Recognize which team is the winner for the match. A match can be played from two teams so 1 entry for each team
			then
				echo -e ${my_array[0]}" 3 "${my_array[2]}" "${my_array[3]} >> output.txt	#Keep info for every match to file for both teams
				echo -e ${my_array[1]}" 0 "${my_array[3]}" " ${my_array[2]} >> output.txt	#Goals in favor for one team are against for the other
				#echo Assos
			elif [ "${my_array[2]}" -lt "${my_array[3]}" ] 
			then
				echo -e ${my_array[0]}" 0 "${my_array[2]}" "${my_array[3]} >> output.txt
				echo -e ${my_array[1]}" 3 "${my_array[3]}" "${my_array[2]} >> output.txt
				#echo Diplo
			else
				echo -e ${my_array[0]}" 1 "${my_array[2]}" "${my_array[3]} >> output.txt
				echo -e ${my_array[1]}" 1 "${my_array[3]}" "${my_array[2]} >> output.txt
				#echo Isopalia
			fi
		fi
		#The temporary file is used to group scores and points for each team.

		#awk is a shell tool to sum of all the numbers in a column. Program need sum for scores and points:
		awk 'BEGIN { FS=OFS=" " }      # set separators  #Only separator is whitespace.
		{ 
	    	a[$1]+=$2             # Sum second field to a hash
	    	b[$1]+=$3   			#Sum third field to a hash
	    	c[$1]+=$4          # 	Sum fourth field to a hash
		}
		END {                     # in the end
	    	for(i in a)           # loop all
	        	print i"\t",a[i]"\t",b[i]"-"c[i] # and output
		}' output.txt > output2.txt
		#Keep the grouped information to a new file and write information with the given layout

		sort -k2,2rn -k1 output2.txt > output3.txt
		#Sort file by points and then by name
		awk '{print NR  ".\t " $s}' output3.txt > output4.txt #Numerate
		tr "_" " " < output4.txt > final2.txt #We used _ so we can handle teams' names (check line)
	fi
		
done < 55.txt
rm 55.txt
rm output.txt
rm output2.txt
rm output3.txt
rm output4.txt	#Delete files
cat final2.txt	#Show final file
truncate -s -1 final2.txt	#Delete last byte so in the end of the file there is no newline
rm final2.txt